# Default values for cosmos-wallets-exporter
replicaCount: 1

image:
  repository: ghcr.io/okdas/cosmos-wallets-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  port: 9550

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: cosmos-wallets-exporter.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: cosmos-wallets-exporter-tls
  #    hosts:
  #      - cosmos-wallets-exporter.local

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

# livenessProbe:
#   httpGet:
#     path: /metrics
#     port: http
#   initialDelaySeconds: 30
#   periodSeconds: 30

# readinessProbe:
#   httpGet:
#     path: /metrics
#     port: http
#   initialDelaySeconds: 5
#   periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Configuration for cosmos-wallets-exporter
config:
  # The address (host:port) the app will listen on
  listen-address: ":9550"

  # Logging configuration
  log:
    level: "info"
    json: true

  # Chains configuration
  # Example configuration - customize for your needs
  chains: []
  # - name: "osmosis"
  #   lcd-endpoint: "https://lcd-osmosis.blockapsis.com"
  #   denoms:
  #     - denom: "uosmo"
  #       display-denom: "osmo"
  #       coingecko-currency: "osmosis"
  #       denom-exponent: 6
  #   wallets:
  #     - address: "osmo1..."
  #       group: "validator"
  #       name: "osmosis-validator"
  #   applications: []
  #   # - address: "pokt1..."
  #   #   group: "gateway"
  #   #   name: "my-pocket-app"
  #   suppliers: []
  #   # - address: "pokt1..."
  #   #   group: "supplier"
  #   #   name: "my-pocket-supplier"

# ServiceMonitor for Prometheus Operator
serviceMonitor:
  enabled: false
  # namespace: monitoring
  labels: {}
  annotations: {}
  interval: 30s
  scrapeTimeout: 10s
  path: /metrics
  # Additional labels to add to the ServiceMonitor
  additionalLabels: {}

# PodMonitor for Prometheus Operator (alternative to ServiceMonitor)
podMonitor:
  enabled: false
  # namespace: monitoring
  labels: {}
  annotations: {}
  interval: 30s
  scrapeTimeout: 10s
  path: /metrics
  # Additional labels to add to the PodMonitor
  additionalLabels: {}
